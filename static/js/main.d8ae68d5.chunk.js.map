{"version":3,"sources":["logo.svg","games/connectFour/connectFourLogic.js","games/tictactoe/gameLogic.js","games/home/personalNavbar.jsx","games/home/gameColumn.jsx","games/home/ClassicGames.js","games/commonComponents/box.jsx","games/commonComponents/board.jsx","games/connectFour/gameConnectFour.jsx","games/connectFour/ConnectFour.jsx","games/tictactoe/gameTicTacToe.jsx","games/tictactoe/TicTacToe.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","differentRows","vector","previous","every","value","currentRow","Math","floor","ret","differentColumn","column","calculateWinner","boxes","structure","unit","Array","from","v","index","i","length","_loop","j","oneUnitColumn","_ret","dimension","sqrt","lines","push","w","PersonalNavbar","react_default","a","createElement","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","activeKey","Item","Link","eventKey","Component","GameColumn","OverlayTrigger","overlay","Tooltip","this","props","description","link","width","height","xmlns","preserveAspectRatio","focusable","role","aria-label","fill","linkImage","name","ClassicGames","gameColumn","Box","key","onClick","style","Board","_this","box","Object","defineProperty","numberOfBoxes","_this2","board","map","renderBox","renderBoard","boardSize","gameLogic","require","GameConnectFour","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","history","colors","stepNumber","isXNext","counter","before","slice","current","freePosition","_findFreePosition","setState","concat","newStep","winner","background","includes","border","type","status","commonComponents_board","handleClick","handleStyle","reset","handleHistory","ConnectFour","gameConnectFour","GameTicTacToe","xIsNext","number","possible","borderRight","borderTop","borderLeft","borderBottom","color","autoComplete","onChange","e","handleChange","target","TicTacToe","gameTicTacToe","App","HashRouter","personalNavbar","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d8ae68d5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","function differentRows(vector){\r\n    let previous = null;\r\n    return vector.every((value) =>\r\n            {\r\n                const currentRow = Math.floor(value/7);\r\n                let ret = false;\r\n                if(previous === null){\r\n                    previous = currentRow;\r\n                    return true;\r\n                }\r\n                if(previous - 1 === currentRow){\r\n                    ret = true;\r\n                    previous = currentRow;\r\n                }\r\n                return ret;\r\n            });\r\n}\r\n\r\nfunction  differentColumn(vector) {\r\n    let column = Math.floor(vector[0]/7);\r\n    return vector.every(value => column === Math.floor(value / 7));\r\n}\r\nlet calculateWinner = function(boxes){\r\n    const length = 7, oneUnitColumn = 7;\r\n    let structure = (value, unit) => Array.from(new Array(4), (v, index) => value - unit * index);\r\n    for(let i = boxes.length - 1; i >= length - 1; i = i - length ){\r\n        for(let j = i; j > i - length; j--){\r\n            if(boxes[j]) {\r\n                if (structure(j, oneUnitColumn).every((index) => boxes[j] === boxes[index])) {\r\n                    return [boxes[j], structure(j, oneUnitColumn)];\r\n                }\r\n                if( differentColumn(structure(j, 1)) && structure(j, 1).every(index => boxes[j] === boxes[index])){\r\n                    return [boxes[j], structure(j, 1)];\r\n                }\r\n                if( differentRows(structure(j, oneUnitColumn + 1)) && structure(j, oneUnitColumn + 1).every(index => boxes[j] === boxes[index])){\r\n                    return [boxes[j], structure(j, oneUnitColumn + 1)];\r\n                }\r\n                if( differentRows(structure(j, oneUnitColumn - 1)) && structure(j, oneUnitColumn - 1).every(index => boxes[j] === boxes[index])){\r\n                    return [boxes[j], structure(j, oneUnitColumn - 1)];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n};\r\n\r\nmodule.exports.calculateWinner = calculateWinner;","let calculateWinner = function (boxes) {\r\n    const dimension = Math.sqrt(boxes.length);\r\n    let lines = [];\r\n    for(let p = 0; p < dimension*2 + 2; p++){\r\n        lines.push([]);\r\n    }\r\n    let column = dimension;\r\n    for(let j = 0; j < dimension; j++) {\r\n        column = dimension;\r\n        lines[dimension * 2].push((dimension) * j + j);\r\n        lines[dimension * 2 + 1].push((dimension) * (j + 1) - j - 1);\r\n        for(let w = j * dimension; w < (j + 1) * dimension; w++){\r\n            lines[j].push(w);\r\n            lines[column].push(w);\r\n            column++;\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const vector = lines[i];\r\n        if (boxes[vector[0]] && vector.every((index) => boxes[vector[0]] === boxes[index])) {\r\n            return [boxes[vector[0]],vector];\r\n        }\r\n    }\r\n    return null;\r\n};\r\n\r\nmodule.exports.calculateWinner = calculateWinner;","import React, { Component } from 'react';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\n\r\nclass PersonalNavbar extends Component {\r\n    render() {\r\n        return (\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"primary\" variant=\"dark\">\r\n                <Navbar.Brand href=\"/ClassicGames/#/\">Classic Games</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"mr-auto\"/>\r\n                    <Nav className=\"justify-content-end\" activeKey=\"/Home\" >\r\n                            <Nav.Item>\r\n                                <Nav.Link eventKey=\"link-1\" href=\"/ClassicGames/#/ConnectFour\"><h5>Connect Four</h5></Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link eventKey=\"link-2\" href=\"/ClassicGames/#/TicTacToe\"><h5>Tic-Tac-Toe</h5></Nav.Link>\r\n                            </Nav.Item>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PersonalNavbar;\r\n","import React, { Component } from 'react';\r\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\r\n\r\nclass GameColumn extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"col-md-4\">\r\n                <div className=\"card mb-4 shadow-sm\">\r\n                    <OverlayTrigger\r\n                        overlay={\r\n                            <Tooltip id={`tooltip-bottom`}>\r\n                                <p className=\"card-text\">{ this.props.description }</p>\r\n                            </Tooltip>\r\n                        }>\r\n                        <a href= { this.props.link }>\r\n                            <svg className=\"bd-placeholder-img card-img-top\" width=\"100%\" height=\"225\"\r\n                                 xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMidYMid slice\"\r\n                                 focusable=\"false\" role=\"img\" aria-label=\"Placeholder: Thumbnail\">\r\n                                <rect width=\"100%\" height=\"100%\" fill=\"aliceblue\"/>\r\n                                <image href= { this.props.linkImage } height=\"100%\" width=\"100%\"/>\r\n                            </svg>\r\n                        </a>\r\n                    </OverlayTrigger>\r\n                    <h3>{ this.props.name }</h3>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GameColumn;","import React, { Component } from 'react'\r\nimport GameColumn from './gameColumn'\r\nimport './ClassicGames.css'\r\n\r\nclass ClassicGames extends Component {\r\n    render() {\r\n        return (\r\n            <main role=\"main\">\r\n                <div className=\"album py-5 bg-light\">\r\n                    <div className=\"container home-container\">\r\n\r\n                        <div className=\"row first-home-row\">\r\n                            <GameColumn name = \"Connect Four\" link = \"/ClassicGames/#/ConnectFour\" linkImage = \"http://simonececcarelli.altervista.org/ClassicGamesImages/connectFour.PNG\" description = \"This is an implementation of the game Connect Four. The objective of the game is to be the first to form a horizontal, vertical, or diagonal line of four of one's own discs\"/>\r\n                            <GameColumn name = \"Snake - Under Construction\" link = \"#\" description = \"This is an implementation of the Snake game\"/>\r\n                            <GameColumn name = \"Tic-Tac-Toe\" link = \"/ClassicGames/#/TicTacToe\" linkImage = \"http://simonececcarelli.altervista.org/ClassicGamesImages/ticTacToe.PNG\" description = \"This is an implementation of the Tic-Tac-Toe game\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ClassicGames;","import React, { Component } from 'react'\r\n\r\nclass Box extends Component{\r\n\r\n    handleColor(){\r\n        /*let style = (this.props.style) ? this.props.style(this.props.index) : {};\r\n        if(this.props.winners.includes(this.props.index)) {\r\n            style = {color: \"green\", border: \"0.1em solid green\"};\r\n        }\r\n        if(this.props.color !== undefined)\r\n            style.background = this.props.color;\r\n        return style;*/\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <button className={ this.props.name } key = { this.props.index } onClick={ this.props.onClick } style={this.props.style(this.props.index)}>\r\n                { this.props.value }\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Box;","import React, { Component } from 'react'\r\nimport Box from './box'\r\n\r\nclass Board extends Component{\r\n\r\n    renderBox(i){\r\n        return <Box index = { i } name = { this.props.name } style = { this.props.style } value = { this.props.boxes[i] } onClick={() => this.props.onClick(i)} style = { this.props.style } />;\r\n    }\r\n\r\n    renderBoard(numberOfBoxes){\r\n        let board = [];\r\n        for(let i = 0; i < numberOfBoxes; i++){\r\n            board.push(\r\n                <div className=\"board-row\">\r\n                    {\r\n                        Array.from(new Array(numberOfBoxes), () => i).map((value, index) => {\r\n                            return this.renderBox(index + (value * numberOfBoxes));\r\n                        })\r\n                    }\r\n                </div>\r\n            );\r\n        }\r\n        return board;\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                {this.renderBoard(this.props.boardSize)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Board;","import React, { Component } from 'react';\r\nimport Board from '../commonComponents/board'\r\nimport './ConnectFour.css'\r\nconst gameLogic = require('./connectFourLogic');\r\n\r\n\r\nclass GameConnectFour extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            history: [{\r\n                boxes: Array.from(new Array(7*7), (value, index) => null),\r\n                colors: Array.from(new Array(7*7), (value, index) => null),\r\n            }],\r\n            stepNumber: 0,\r\n            boardSize: 7,\r\n            isXNext: true,\r\n        };\r\n    }\r\n\r\n    _findFreePosition(column, boxes){\r\n        let counter = column;\r\n        let before = boxes[counter];\r\n        counter += this.state.boardSize;\r\n        for(let i = 1; i < this.state.boardSize; i++){\r\n            if(before == null && boxes[counter] != null){\r\n                return counter - 7;\r\n            }\r\n            if(boxes[counter] == null && i === this.state.boardSize-1){\r\n                return counter;\r\n            }\r\n            counter += 7;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    handleClick(i){\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const boxes = current.boxes.slice();\r\n        const colors = current.colors.slice();\r\n        const column = i % this.state.boardSize;\r\n        const freePosition = this._findFreePosition(column, boxes);\r\n        if(gameLogic.calculateWinner(boxes)){\r\n            return;\r\n        }\r\n        if(freePosition != null){\r\n            boxes[freePosition] = this.state.isXNext ? '#d70000' : '#CCCC00';\r\n            colors[freePosition] = this.state.isXNext ? '#d70000' : '#CCCC00';\r\n            this.setState({\r\n                history: history.concat([{\r\n                    boxes: boxes,\r\n                    colors: colors,\r\n                }]),\r\n                stepNumber: history.length,\r\n                isXNext: !this.state.isXNext,\r\n            });\r\n        }\r\n    }\r\n\r\n    reset(){\r\n        this.setState({\r\n            history: [{\r\n                boxes: Array.from(new Array(7*7), (value, index) => null),\r\n                colors: Array.from(new Array(7*7), (value, index) => null),\r\n            }],\r\n            stepNumber: 0,\r\n            isXNext: true,\r\n        });\r\n    }\r\n\r\n    handleHistory(i){\r\n        const newStep = this.state.stepNumber + i;\r\n        if( newStep <= this.state.history.length - 1 && newStep >= 0) {\r\n            let state = {\r\n                stepNumber: this.state.stepNumber + i,\r\n                isXNext: !this.state.isXNext,\r\n            };\r\n            this.setState(state);\r\n        }\r\n    }\r\n\r\n    handleStyle(id){\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = gameLogic.calculateWinner(current.boxes);\r\n        let style = {background: current.colors[id]};\r\n        if(winner && winner[1].includes(id))\r\n            style.border = \"0.1em solid green\";\r\n        return style;\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        let boxWinners = [-1,-1];\r\n\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = gameLogic.calculateWinner(current.boxes);\r\n        let type;\r\n        if(winner){\r\n            type = winner[0] === '#d70000' ? 'Red' : 'Yellow';\r\n            boxWinners = winner[1];\r\n        }\r\n        const status = winner ? 'The winner is ' + type : 'Next Player is ' + (this.state.isXNext ? 'Red' : 'Yellow');\r\n        return (\r\n            <main role=\"main\" className=\"container\">\r\n                <div className=\"page-title-connect-four\">\r\n                    <h1>\r\n                        Connect Four\r\n                    </h1>\r\n                </div>\r\n                <div className=\"body-connect-four\">\r\n                    <div className=\"status\">\r\n                        <div><h3>{ status }</h3></div>\r\n                    </div>\r\n                    <Board\r\n                        name = \"box-connect-four btn-circle\"\r\n                        boardSize = { this.state.boardSize }\r\n                        boxes = { \"\" }\r\n                        onClick = { (i) => this.handleClick(i) }\r\n                        style = { (i) => this.handleStyle(i)}\r\n                    />\r\n                    <div className=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\r\n                        <div className=\"btn-group-reset\" role=\"group\" aria-label=\"First group\">\r\n                            <button  onClick={ () => this.reset() } className=\"btn btn-danger\">Reset</button>\r\n                        </div>\r\n                        <div className=\"btn-group-nextprevious\" role=\"group\" aria-label=\"Second group\">\r\n                            <button  onClick={ () => this.handleHistory(-1) } className=\"btn btn-primary\">Precedence</button>\r\n                            <button  onClick={ () => this.handleHistory(1) } className=\"btn btn-primary\">Next</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GameConnectFour;","import React, { Component } from 'react';\r\nimport GameConnectFour from './gameConnectFour'\r\n\r\nclass ConnectFour extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <GameConnectFour/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConnectFour;\r\n","import React, { Component } from 'react'\r\nimport Board from '../commonComponents/board'\r\nimport './TicTacToe.css'\r\nimport { Jumbotron, Container, Row, Col } from 'react-bootstrap'\r\nconst gameLogic = require('./gameLogic');\r\n\r\n\r\n\r\nclass GameTicTacToe extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            history:[{\r\n                boxes: Array(9).fill(null),\r\n            }],\r\n            stepNumber: 0,\r\n            xIsNext: true,\r\n            numberOfBoxes: 3,\r\n        };\r\n    }\r\n\r\n    handleClick(i){\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const boxes = current.boxes.slice();\r\n        if(gameLogic.calculateWinner(boxes) || boxes[i]) {\r\n            return;\r\n        }\r\n        boxes[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n            history: history.concat([{\r\n                boxes: boxes,\r\n            }]),\r\n            stepNumber: history.length,\r\n            xIsNext: !this.state.xIsNext,\r\n        });\r\n    }\r\n\r\n    handleChange(number){\r\n        const possible = [0,1,2,3,4,5,6,7,8,9];\r\n        if(number >= 3 && number <= 6){\r\n            this.setState({\r\n                history:[{\r\n                    boxes: Array(possible[number] * possible[number]).fill(null),\r\n                }],\r\n                stepNumber: 0,\r\n                xIsNext: true,\r\n                numberOfBoxes: possible[number],\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    reset(){\r\n        this.setState({\r\n            history:[{\r\n                boxes: Array(9).fill(null),\r\n            }],\r\n            stepNumber: 0,\r\n            xIsNext: true,\r\n            numberOfBoxes: 3,\r\n        });\r\n    }\r\n\r\n    handleHistory(i){\r\n        const newStep = this.state.stepNumber + i;\r\n        if( newStep <= this.state.history.length - 1 && newStep >= 0) {\r\n            let state = {\r\n                stepNumber: this.state.stepNumber + i,\r\n                xIsNext: !this.state.xIsNext,\r\n            };\r\n            this.setState(state);\r\n        }\r\n    }\r\n\r\n    handleStyle(id){\r\n        let style = {};\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = gameLogic.calculateWinner(current.boxes);\r\n        const color = \"black\";\r\n        if(id % this.state.numberOfBoxes === this.state.numberOfBoxes - 1){//last column of the board\r\n            style.borderRight = \"solid \" + color;\r\n        }\r\n        if(id <= this.state.numberOfBoxes - 1) { //first row\r\n            style.borderTop = \"solid \" + color;\r\n        }\r\n        if(id % this.state.numberOfBoxes === 0){//first column\r\n            style.borderLeft = \"solid \" + color;\r\n        }\r\n        if(id >= this.state.numberOfBoxes * this.state.numberOfBoxes - this.state.numberOfBoxes){//last row\r\n            style.borderBottom = \"solid \" + color;\r\n        }\r\n        if(winner && winner[1].includes(id)){\r\n            style.color = \"green\";\r\n        }\r\n        return style;\r\n    }\r\n\r\n    render(){\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n\r\n        let boxWinners = [-1,-1];\r\n        let winner = gameLogic.calculateWinner(current.boxes);\r\n        if(winner) {\r\n            boxWinners = winner[1];\r\n            winner = winner[0];\r\n        }\r\n        const status = winner ? 'The winner is ' + winner : 'Next Player is ' + (this.state.xIsNext ? 'X' : 'O');\r\n\r\n        return (\r\n            <main role=\"main\" className=\"container\">\r\n                    <div className=\"blackboard\">\r\n                    <div className=\"pagetitle-tic-tac\">\r\n                        <h1>\r\n                            Tic-Tac-Toe Game\r\n                        </h1>\r\n                    </div>\r\n                        <div className=\"body-tic-tac\">\r\n                            <div className=\"square-number\">\r\n                                <h5>Number of squares (from 3 to 6)</h5>\r\n                                <input type=\"text\" autoComplete=\"off\" name=\"name\" onChange={ (e) => {this.handleChange(e.target.value)}} />\r\n                            </div>\r\n\r\n                            <div className=\"status\">\r\n                                <div><h5>{ status }</h5></div>\r\n                            </div>\r\n                            <div className=\"game-board-tic-tac\">\r\n                                    <Board\r\n                                        name = \"box-tic-tac\"\r\n                                        boxes = { current.boxes }\r\n                                        onClick = { (i) => this.handleClick(i) }\r\n                                        boardSize = { this.state.numberOfBoxes }\r\n                                        style = { (i) => this.handleStyle(i) }\r\n                                    />\r\n                            </div>\r\n                            <div className=\"btn-toolbar tic-tac-buttons\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\r\n                                <div className=\"btn-group-reset-tic-tac\" role=\"group\" aria-label=\"First group\">\r\n                                    <button  onClick={ () => this.reset() } className=\"btn personal-outline-danger mr-1\" >Reset</button>\r\n                                </div>\r\n                                <div className=\"btn-group-nextprevious-tic-tac\" role=\"group\" aria-label=\"Second group\">\r\n                                    <button  onClick={ () => this.handleHistory(-1) } className=\"btn personal-outline-primary\">Precedence</button>\r\n                                    <button  onClick={ () => this.handleHistory(1) } className=\"btn personal-outline-primary\">Next</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GameTicTacToe;","import React, { Component } from 'react';\r\nimport GameTicTacToe from './gameTicTacToe'\r\n\r\nclass TicTacToe extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <GameTicTacToe/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TicTacToe;\r\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './style/App.css';\nimport PersonalNavbar from './games/home/personalNavbar'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport ClassicGames from './games/home/ClassicGames'\nimport ConnectFour from './games/connectFour/ConnectFour'\nimport TicTacToe from './games/tictactoe/TicTacToe'\n\n\nclass App extends Component {\n  render() {\n    return (\n        <div>\n        <Router>\n            <div>\n                <PersonalNavbar/>\n                <Switch>\n                    <Route exact path='/' component={ClassicGames}/>\n                    <Route path=\"/ConnectFour\" component={ConnectFour}/>\n                    <Route path=\"/TicTacToe\" component={TicTacToe}/>\n                </Switch>\n            </div>\n        </Router>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './style/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}