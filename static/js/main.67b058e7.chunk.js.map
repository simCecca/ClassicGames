{"version":3,"sources":["logo.svg","games/tictactoe/gameLogic.js","games/connectFour/connectFourLogic.js","games/commonComponents/box.jsx","games/commonComponents/board.jsx","games/tictactoe/gameTicTacToe.jsx","games/connectFour/gameConnectFour.jsx","personalNavbar.jsx","games/connectFour/ConnectFour.jsx","games/tictactoe/TicTacToe.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","calculateWinner","boxes","dimension","Math","sqrt","length","lines","push","column","j","w","_loop","i","vector","every","index","v","_ret","differentRows","previous","value","currentRow","floor","ret","differentColumn","structure","unit","Array","from","oneUnitColumn","Box","style","this","props","winners","includes","background","undefined","color","react_default","a","createElement","className","name","key","onClick","handleColor","Component","Board","_this","box","colors","numberOfBoxes","_this2","board","map","renderBox","renderBoard","boardSize","gameLogic","require","GameTicTacToe","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","history","fill","stepNumber","xIsNext","slice","setState","concat","number","possible","newStep","id","borderRight","borderTop","borderLeft","borderBottom","current","boxWinners","winner","status","type","autoComplete","onChange","e","handleChange","target","commonComponents_board","handleClick","handleStyle","role","aria-label","reset","handleHistory","GameConnectFour","isXNext","counter","before","freePosition","_findFreePosition","PersonalNavbar","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","Nav","activeKey","Item","Link","eventKey","ConnectFour","gameConnectFour","TicTacToe","gameTicTacToe","App","BrowserRouter","personalNavbar","Route","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.67b058e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","let calculateWinner = function (boxes) {\r\n    const dimension = Math.sqrt(boxes.length);\r\n    let lines = [];\r\n    for(let p = 0; p < dimension*2 + 2; p++){\r\n        lines.push([]);\r\n    }\r\n    let column = dimension;\r\n    for(let j = 0; j < dimension; j++) {\r\n        column = dimension;\r\n        lines[dimension * 2].push((dimension) * j + j);\r\n        lines[dimension * 2 + 1].push((dimension) * (j + 1) - j - 1);\r\n        for(let w = j * dimension; w < (j + 1) * dimension; w++){\r\n            lines[j].push(w);\r\n            lines[column].push(w);\r\n            column++;\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const vector = lines[i];\r\n        if (boxes[vector[0]] && vector.every((index) => boxes[vector[0]] === boxes[index])) {\r\n            return [boxes[vector[0]],vector];\r\n        }\r\n    }\r\n    return null;\r\n};\r\n\r\nmodule.exports.calculateWinner = calculateWinner;","function differentRows(vector){\r\n    let previous = null;\r\n    return vector.every((value) =>\r\n            {\r\n                const currentRow = Math.floor(value/7);\r\n                let ret = false;\r\n                if(previous === null){\r\n                    previous = currentRow;\r\n                    return true;\r\n                }\r\n                if(previous - 1 === currentRow){\r\n                    ret = true;\r\n                    previous = currentRow;\r\n                }\r\n                return ret;\r\n            });\r\n}\r\n\r\nfunction  differentColumn(vector) {\r\n    let column = Math.floor(vector[0]/7);\r\n    return vector.every(value => column === Math.floor(value / 7));\r\n}\r\nlet calculateWinner = function(boxes){\r\n    const length = 7, oneUnitColumn = 7;\r\n    let structure = (value, unit) => Array.from(new Array(4), (v, index) => value - unit * index);\r\n    for(let i = boxes.length - 1; i >= length - 1; i = i - length ){\r\n        for(let j = i; j > i - length; j--){\r\n            if(boxes[j]) {\r\n                if (structure(j, oneUnitColumn).every((index) => boxes[j] === boxes[index])) {\r\n                    return [boxes[j], structure(j, oneUnitColumn)];\r\n                }\r\n                if( differentColumn(structure(j, 1)) && structure(j, 1).every(index => boxes[j] === boxes[index])){\r\n                    return [boxes[j], structure(j, 1)];\r\n                }\r\n                if( differentRows(structure(j, oneUnitColumn + 1)) && structure(j, oneUnitColumn + 1).every(index => boxes[j] === boxes[index])){\r\n                    return [boxes[j], structure(j, oneUnitColumn + 1)];\r\n                }\r\n                if( differentRows(structure(j, oneUnitColumn - 1)) && structure(j, oneUnitColumn - 1).every(index => boxes[j] === boxes[index])){\r\n                    return [boxes[j], structure(j, oneUnitColumn - 1)];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n};\r\n\r\nmodule.exports.calculateWinner = calculateWinner;","import React, { Component } from 'react'\r\n\r\nclass Box extends Component{\r\n\r\n    handleColor(){\r\n        let style = (this.props.style) ? this.props.style(this.props.index) : {};\r\n        if(this.props.winners.includes(this.props.index))\r\n            style = {background : \"green\"};\r\n        if(this.props.color !== undefined)\r\n            style.color = this.props.color;\r\n        return style;\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <button className={ this.props.name } key = { this.props.index } onClick={ this.props.onClick } style={this.handleColor()}>\r\n                { this.props.value }\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Box;","import React, { Component } from 'react'\r\nimport Box from './box'\r\n\r\nclass Board extends Component{\r\n\r\n    renderBox(i){\r\n        return <Box index = { i } name = { this.props.name } color = { this.props.colors ? this.props.colors[i] : this.props.colors } style = { this.props.style } value = { this.props.boxes[i] } onClick={() => this.props.onClick(i)} winners = { this.props.winners } />;\r\n    }\r\n\r\n    renderBoard(numberOfBoxes){\r\n        let board = [];\r\n        for(let i = 0; i < numberOfBoxes; i++){\r\n            board.push(\r\n                <div className=\"board-row\">\r\n                    {\r\n                        Array.from(new Array(numberOfBoxes), () => i).map((value, index) => {\r\n                            return this.renderBox(index + (value * numberOfBoxes));\r\n                        })\r\n                    }\r\n                </div>\r\n            );\r\n        }\r\n        return board;\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                {this.renderBoard(this.props.boardSize)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Board;","import React, { Component } from 'react'\r\nimport Board from '../commonComponents/board'\r\nimport './TicTacToe.css'\r\nimport { Jumbotron, Container, Row, Col } from 'react-bootstrap'\r\nconst gameLogic = require('./gameLogic');\r\n\r\n\r\n\r\nclass GameTicTacToe extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            history:[{\r\n                boxes: Array(9).fill(null),\r\n            }],\r\n            stepNumber: 0,\r\n            xIsNext: true,\r\n            numberOfBoxes: 3,\r\n        };\r\n    }\r\n\r\n    handleClick(i){\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const boxes = current.boxes.slice();\r\n        if(gameLogic.calculateWinner(boxes) || boxes[i]) {\r\n            return;\r\n        }\r\n        boxes[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n            history: history.concat([{\r\n                boxes: boxes,\r\n            }]),\r\n            stepNumber: history.length,\r\n            xIsNext: !this.state.xIsNext,\r\n        });\r\n    }\r\n\r\n    handleChange(number){\r\n        const possible = [0,1,2,3,4,5,6,7,8,9];\r\n        if(number >= 3 && number <= 6){\r\n            this.setState({\r\n                history:[{\r\n                    boxes: Array(possible[number] * possible[number]).fill(null),\r\n                }],\r\n                stepNumber: 0,\r\n                xIsNext: true,\r\n                numberOfBoxes: possible[number],\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    reset(){\r\n        this.setState({\r\n            history:[{\r\n                boxes: Array(9).fill(null),\r\n            }],\r\n            stepNumber: 0,\r\n            xIsNext: true,\r\n            numberOfBoxes: 3,\r\n        });\r\n    }\r\n\r\n    handleHistory(i){\r\n        const newStep = this.state.stepNumber + i;\r\n        if( newStep <= this.state.history.length - 1 && newStep >= 0) {\r\n            let state = {\r\n                stepNumber: this.state.stepNumber + i,\r\n                xIsNext: !this.state.xIsNext,\r\n            };\r\n            this.setState(state);\r\n        }\r\n    }\r\n\r\n    handleStyle(id){\r\n        let style = {};\r\n        if(id % this.state.numberOfBoxes === this.state.numberOfBoxes - 1){//last column of the board\r\n            style.borderRight = \"solid black\";\r\n        }\r\n        if(id <= this.state.numberOfBoxes - 1) { //first row\r\n            style.borderTop = \"solid black\";\r\n        }\r\n        if(id % this.state.numberOfBoxes === 0){//first column\r\n            style.borderLeft = \"solid black\";\r\n        }\r\n        if(id >= this.state.numberOfBoxes * this.state.numberOfBoxes - this.state.numberOfBoxes){//last row\r\n            style.borderBottom = \"solid black\";\r\n        }\r\n        return style;\r\n    }\r\n\r\n    render(){\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n\r\n        let boxWinners = [-1,-1];\r\n        let winner = gameLogic.calculateWinner(current.boxes);\r\n        if(winner) {\r\n            boxWinners = winner[1];\r\n            winner = winner[0];\r\n        }\r\n        const status = winner ? 'The winner is ' + winner : 'Next Player is ' + (this.state.xIsNext ? 'X' : 'O');\r\n\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"blackboard\">\r\n                <div className=\"pagetitle-tic-tac\">\r\n                    <h1>\r\n                        Tic-Tac-Toe Game\r\n                    </h1>\r\n                </div>\r\n                    <div className=\"body-tic-tac\">\r\n                        <div className=\"squarenumber\">\r\n                            <h5>Number of squares (from 3 to 6)</h5>\r\n                            <input type=\"text\" autoComplete=\"off\" name=\"name\" onChange={ (e) => {this.handleChange(e.target.value)}} />\r\n                        </div>\r\n\r\n                        <div className=\"status\">\r\n                            <div><h5>{ status }</h5></div>\r\n                        </div>\r\n                        <div className=\"game-board-tic-tac\">\r\n                                <Board\r\n                                    name = \"box-tic-tac\"\r\n                                    boxes = { current.boxes }\r\n                                    onClick = { (i) => this.handleClick(i) }\r\n                                    winners = { boxWinners }\r\n                                    boardSize = { this.state.numberOfBoxes }\r\n                                    style = {(i) => this.handleStyle(i)}\r\n                                />\r\n                        </div>\r\n                        <div className=\"btn-toolbar tic-tac-buttons\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\r\n                            <div className=\"btn-group-reset-tic-tac\" role=\"group\" aria-label=\"First group\">\r\n                                <button  onClick={ () => this.reset() } className=\"btn personal-outline-danger mr-1\" >Reset</button>\r\n                            </div>\r\n                            <div className=\"btn-group-nextprevious-tic-tac\" role=\"group\" aria-label=\"Second group\">\r\n                                <button  onClick={ () => this.handleHistory(-1) } className=\"btn personal-outline-primary\">Precedence</button>\r\n                                <button  onClick={ () => this.handleHistory(1) } className=\"btn personal-outline-primary\">Next</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GameTicTacToe;","import React, { Component } from 'react';\r\nimport Board from '../commonComponents/board'\r\nimport './ConnectFour.css'\r\nconst gameLogic = require('./connectFourLogic');\r\n\r\n\r\nclass GameConnectFour extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            history: [{\r\n                boxes: Array.from(new Array(7*7), (value, index) => null),\r\n                colors: Array.from(new Array(7*7), (value, index) => null),\r\n            }],\r\n            stepNumber: 0,\r\n            boardSize: 7,\r\n            isXNext: true,\r\n        };\r\n    }\r\n\r\n    _findFreePosition(column, boxes){\r\n        let counter = column;\r\n        let before = boxes[counter];\r\n        counter += this.state.boardSize;\r\n        for(let i = 1; i < this.state.boardSize; i++){\r\n            if(before == null && boxes[counter] != null){\r\n                return counter - 7;\r\n            }\r\n            if(boxes[counter] == null && i === this.state.boardSize-1){\r\n                return counter;\r\n            }\r\n            counter += 7;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    handleClick(i){\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const boxes = current.boxes.slice();\r\n        const colors = current.colors.slice();\r\n        const column = i % this.state.boardSize;\r\n        const freePosition = this._findFreePosition(column, boxes);\r\n        if(gameLogic.calculateWinner(boxes)){\r\n            return;\r\n        }\r\n        if(freePosition != null){\r\n            boxes[freePosition] = this.state.isXNext ? 'X' : 'O';\r\n            colors[freePosition] = this.state.isXNext ? '#d70000' : '#CCCC00';\r\n            this.setState({\r\n                history: history.concat([{\r\n                    boxes: boxes,\r\n                    colors: colors,\r\n                }]),\r\n                stepNumber: history.length,\r\n                isXNext: !this.state.isXNext,\r\n            });\r\n        }\r\n    }\r\n\r\n    reset(){\r\n        this.setState({\r\n            history: [{\r\n                boxes: Array.from(new Array(7*7), (value, index) => null),\r\n                colors: Array.from(new Array(7*7), (value, index) => null),\r\n            }],\r\n            stepNumber: 0,\r\n            isXNext: true,\r\n        });\r\n    }\r\n\r\n    handleHistory(i){\r\n        const newStep = this.state.stepNumber + i;\r\n        if( newStep <= this.state.history.length - 1 && newStep >= 0) {\r\n            let state = {\r\n                stepNumber: this.state.stepNumber + i,\r\n                isXNext: !this.state.isXNext,\r\n            };\r\n            this.setState(state);\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        let boxWinners = [-1,-1];\r\n\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = gameLogic.calculateWinner(current.boxes);\r\n        let type;\r\n        if(winner){\r\n            type = winner[0];\r\n            boxWinners = winner[1];\r\n        }\r\n        const status = winner ? 'The winner is ' + type : 'Next Player is ' + (this.state.isXNext ? 'X' : 'O');\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"pagetitle\">\r\n                    <h1>\r\n                        Connect Four\r\n                    </h1>\r\n                </div>\r\n                <div className=\"body\">\r\n                    <div className=\"status\">\r\n                        <div><h3>{ status }</h3></div>\r\n                    </div>\r\n                    <Board\r\n                        name = \"box-connect-four btn-circle\"\r\n                        colors = { current.colors }\r\n                        boardSize = { this.state.boardSize }\r\n                        boxes = { current.boxes }\r\n                        onClick = { (i) => this.handleClick(i) }\r\n                        winners = { boxWinners }/>\r\n                    <div className=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\r\n                        <div className=\"btn-group-reset\" role=\"group\" aria-label=\"First group\">\r\n                            <button  onClick={ () => this.reset() } className=\"btn btn-danger\">Reset</button>\r\n                        </div>\r\n                        <div className=\"btn-group-nextprevious\" role=\"group\" aria-label=\"Second group\">\r\n                            <button  onClick={ () => this.handleHistory(-1) } className=\"btn btn-primary\">Precedence</button>\r\n                            <button  onClick={ () => this.handleHistory(1) } className=\"btn btn-primary\">Next</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GameConnectFour;","import React, { Component } from 'react';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\n\r\nclass PersonalNavbar extends Component {\r\n    render() {\r\n        return (\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"primary\" variant=\"dark\">\r\n                <Navbar.Brand href=\"/ClassicGames\">Classic Games</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"mr-auto\"/>\r\n                    <Nav className=\"justify-content-end\" activeKey=\"/Home\" >\r\n                            <Nav.Item>\r\n                                <Nav.Link eventKey=\"link-1\" href=\"/ConnectFour\"><h5>Connected Four</h5></Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link eventKey=\"link-2\" href=\"/TicTacToe\"><h5>Tic-Tac-Toe</h5></Nav.Link>\r\n                            </Nav.Item>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PersonalNavbar;\r\n","import React, { Component } from 'react';\r\nimport GameConnectFour from './gameConnectFour'\r\n\r\nclass ConnectFour extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <GameConnectFour/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConnectFour;\r\n","import React, { Component } from 'react';\r\nimport GameTicTacToe from './gameTicTacToe'\r\n\r\nclass TicTacToe extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <GameTicTacToe/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TicTacToe;\r\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './style/App.css';\nimport GameTicTacToe from './games/tictactoe/gameTicTacToe'\nimport GameConnectFour from './games/connectFour/gameConnectFour'\nimport PersonalNavbar from './personalNavbar'\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport ConnectFour from './games/connectFour/ConnectFour'\nimport TicTacToe from './games/tictactoe/TicTacToe'\n\n\nclass App extends Component {\n  render() {\n    return (\n        <Router>\n            <div>\n                <PersonalNavbar/>\n                <Route path=\"/ConnectFour\" component={ConnectFour}/>\n                <Route path=\"/TicTacToe\" component={TicTacToe}/>\n            </div>\n        </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './style/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}